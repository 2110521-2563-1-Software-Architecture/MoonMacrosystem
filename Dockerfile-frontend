# Name the node stage "builder"
FROM node:13.1-alpine as builder

# Set working directory
WORKDIR /app
# Copy all files from current directory to working dir in image
COPY ./frontend/package.json ./frontend/yarn.lock ./
RUN apk --update add --no-cache autoconf automake libpng-dev gcc make g++ zlib-dev
RUN yarn cache clean && yarn --update-checksums
COPY ./frontend ./
# install node modules and build assets
RUN yarn global -D pngquant-bin
RUN yarn build

# nginx state for serving content
FROM nginx:alpine
# Set working directory to nginx asset directory
WORKDIR /usr/share/nginx/html
# Remove default nginx static assets
RUN rm -rf ./*
# Copy static assets from builder stage
COPY --from=builder /app/build .
# Containers run nginx with global directives and daemon off
EXPOSE 3001
ENTRYPOINT ["nginx", "-g", "daemon off;"]